// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_loop_height_pro (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        imag_1_data_stream_0_V_din,
        imag_1_data_stream_0_V_full_n,
        imag_1_data_stream_0_V_write,
        imag_1_data_stream_1_V_din,
        imag_1_data_stream_1_V_full_n,
        imag_1_data_stream_1_V_write,
        imag_1_data_stream_2_V_din,
        imag_1_data_stream_2_V_full_n,
        imag_1_data_stream_2_V_write,
        imag0_0_data_stream_0_V_dout,
        imag0_0_data_stream_0_V_empty_n,
        imag0_0_data_stream_0_V_read,
        imag0_0_data_stream_1_V_dout,
        imag0_0_data_stream_1_V_empty_n,
        imag0_0_data_stream_1_V_read,
        imag0_0_data_stream_2_V_dout,
        imag0_0_data_stream_2_V_empty_n,
        imag0_0_data_stream_2_V_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [7:0] imag_1_data_stream_0_V_din;
input   imag_1_data_stream_0_V_full_n;
output   imag_1_data_stream_0_V_write;
output  [7:0] imag_1_data_stream_1_V_din;
input   imag_1_data_stream_1_V_full_n;
output   imag_1_data_stream_1_V_write;
output  [7:0] imag_1_data_stream_2_V_din;
input   imag_1_data_stream_2_V_full_n;
output   imag_1_data_stream_2_V_write;
input  [7:0] imag0_0_data_stream_0_V_dout;
input   imag0_0_data_stream_0_V_empty_n;
output   imag0_0_data_stream_0_V_read;
input  [7:0] imag0_0_data_stream_1_V_dout;
input   imag0_0_data_stream_1_V_empty_n;
output   imag0_0_data_stream_1_V_read;
input  [7:0] imag0_0_data_stream_2_V_dout;
input   imag0_0_data_stream_2_V_empty_n;
output   imag0_0_data_stream_2_V_read;

reg ap_done;
reg ap_idle;
reg start_write;
reg imag_1_data_stream_0_V_write;
reg imag_1_data_stream_1_V_write;
reg imag_1_data_stream_2_V_write;
reg imag0_0_data_stream_0_V_read;
reg imag0_0_data_stream_1_V_read;
reg imag0_0_data_stream_2_V_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    imag_1_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_reg_557;
reg   [0:0] ap_reg_pp0_iter2_exitcond_reg_557;
reg    imag_1_data_stream_1_V_blk_n;
reg    imag_1_data_stream_2_V_blk_n;
reg    imag0_0_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] or_cond_reg_570;
reg    imag0_0_data_stream_1_V_blk_n;
reg    imag0_0_data_stream_2_V_blk_n;
reg   [10:0] t_V_1_reg_253;
wire   [0:0] exitcond1_fu_309_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_315_p2;
reg   [9:0] i_V_reg_547;
wire   [0:0] tmp_5_fu_321_p2;
reg   [0:0] tmp_5_reg_552;
wire   [0:0] exitcond_fu_327_p2;
wire    ap_block_state3_pp0_stage0_iter0;
wire   [7:0] imag3_0_data_stream_s_dout;
wire    imag3_0_data_stream_s_empty_n;
reg    imag3_0_data_stream_s_read;
reg   [0:0] tmp_7_reg_566;
reg    ap_predicate_op58_read_state4;
wire   [7:0] imag3_0_data_stream_1_dout;
wire    imag3_0_data_stream_1_empty_n;
reg    imag3_0_data_stream_1_read;
wire   [7:0] imag3_0_data_stream_2_dout;
wire    imag3_0_data_stream_2_empty_n;
reg    imag3_0_data_stream_2_read;
wire   [7:0] imag2_0_data_stream_s_dout;
wire    imag2_0_data_stream_s_empty_n;
reg    imag2_0_data_stream_s_read;
reg    ap_predicate_op68_read_state4;
wire   [7:0] imag2_0_data_stream_1_dout;
wire    imag2_0_data_stream_1_empty_n;
reg    imag2_0_data_stream_1_read;
wire   [7:0] imag2_0_data_stream_2_dout;
wire    imag2_0_data_stream_2_empty_n;
reg    imag2_0_data_stream_2_read;
wire   [7:0] imag3_0_data_stream_s_din;
wire    imag3_0_data_stream_s_full_n;
reg    imag3_0_data_stream_s_write;
reg    ap_predicate_op90_write_state4;
wire   [7:0] imag3_0_data_stream_1_din;
wire    imag3_0_data_stream_1_full_n;
reg    imag3_0_data_stream_1_write;
wire   [7:0] imag3_0_data_stream_2_din;
wire    imag3_0_data_stream_2_full_n;
reg    imag3_0_data_stream_2_write;
reg    ap_predicate_op97_read_state4;
wire    imag2_0_data_stream_s_full_n;
reg    imag2_0_data_stream_s_write;
wire    imag2_0_data_stream_1_full_n;
reg    imag2_0_data_stream_1_write;
wire    imag2_0_data_stream_2_full_n;
reg    imag2_0_data_stream_2_write;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_reg_557;
wire   [10:0] j_V_fu_333_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_7_fu_339_p2;
reg   [0:0] ap_reg_pp0_iter1_tmp_7_reg_566;
reg   [0:0] ap_reg_pp0_iter2_tmp_7_reg_566;
wire   [0:0] or_cond_fu_345_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_reg_570;
reg   [0:0] ap_reg_pp0_iter2_or_cond_reg_570;
wire   [0:0] tmp_s_fu_350_p2;
reg   [0:0] tmp_s_reg_574;
wire   [0:0] tmp_8_fu_356_p2;
reg   [0:0] tmp_8_reg_580;
wire   [0:0] not_tmp_s_fu_362_p2;
reg   [0:0] not_tmp_s_reg_586;
wire   [9:0] tmp_20_fu_390_p2;
reg   [9:0] tmp_20_reg_592;
wire   [9:0] tmp_13_fu_418_p2;
reg   [9:0] tmp_13_reg_597;
wire   [7:0] tmp_3_fu_460_p3;
wire   [7:0] tmp_6_fu_469_p3;
wire   [7:0] tmp_9_fu_478_p3;
reg   [7:0] s_val_0_reg_632;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg   [9:0] t_V_reg_242;
reg    ap_block_state1;
wire    ap_CS_fsm_state7;
reg   [9:0] ap_phi_mux_storemerge256_in_in_phi_fu_267_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_storemerge256_in_in_reg_264;
reg   [7:0] ap_phi_mux_tmp_22_phi_fu_276_p6;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_22_reg_273;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_22_reg_273;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_22_reg_273;
reg   [7:0] ap_phi_reg_pp0_iter3_tmp_22_reg_273;
reg   [7:0] ap_phi_mux_tmp_23_phi_fu_288_p6;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_23_reg_285;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_23_reg_285;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_23_reg_285;
reg   [7:0] ap_phi_reg_pp0_iter3_tmp_23_reg_285;
reg   [7:0] ap_phi_mux_tmp_24_phi_fu_300_p6;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_24_reg_297;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_24_reg_297;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_24_reg_297;
reg   [7:0] ap_phi_reg_pp0_iter3_tmp_24_reg_297;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_23_cast_fu_372_p1;
wire   [8:0] tmp_22_cast_fu_368_p1;
wire   [8:0] tmp_18_fu_376_p2;
wire   [9:0] tmp_25_cast_fu_382_p1;
wire   [9:0] tmp_24_cast_fu_386_p1;
wire   [8:0] tmp_16_cast_fu_400_p1;
wire   [8:0] tmp_15_cast_fu_396_p1;
wire   [8:0] tmp_12_fu_404_p2;
wire   [9:0] tmp_18_cast_fu_410_p1;
wire   [9:0] tmp_17_cast_fu_414_p1;
wire   [0:0] not_tmp_1_fu_424_p2;
wire   [0:0] p_not_tmp_s_fu_429_p2;
wire   [0:0] p_not_tmp_1_fu_434_p2;
wire   [0:0] not_tmp_2_fu_443_p2;
wire   [0:0] s_val_2_fu_454_p2;
wire   [0:0] s_val_1_fu_448_p2;
wire   [0:0] s_val_0_3_fu_438_p2;
wire   [21:0] mul_fu_500_p2;
wire   [9:0] mul_fu_500_p0;
wire   [11:0] mul_fu_500_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] mul_fu_500_p00;
reg    ap_condition_598;
reg    ap_condition_182;
reg    ap_condition_350;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

vip1_m_mul_mul_10bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 22 ))
vip1_m_mul_mul_10bkb_U11(
    .din0(mul_fu_500_p0),
    .din1(mul_fu_500_p1),
    .dout(mul_fu_500_p2)
);

fifo_w8_d640_A imag2_0_data_stream_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(imag0_0_data_stream_0_V_dout),
    .if_full_n(imag2_0_data_stream_s_full_n),
    .if_write(imag2_0_data_stream_s_write),
    .if_dout(imag2_0_data_stream_s_dout),
    .if_empty_n(imag2_0_data_stream_s_empty_n),
    .if_read(imag2_0_data_stream_s_read)
);

fifo_w8_d640_A imag2_0_data_stream_1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(imag0_0_data_stream_1_V_dout),
    .if_full_n(imag2_0_data_stream_1_full_n),
    .if_write(imag2_0_data_stream_1_write),
    .if_dout(imag2_0_data_stream_1_dout),
    .if_empty_n(imag2_0_data_stream_1_empty_n),
    .if_read(imag2_0_data_stream_1_read)
);

fifo_w8_d640_A imag2_0_data_stream_2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(imag0_0_data_stream_2_V_dout),
    .if_full_n(imag2_0_data_stream_2_full_n),
    .if_write(imag2_0_data_stream_2_write),
    .if_dout(imag2_0_data_stream_2_dout),
    .if_empty_n(imag2_0_data_stream_2_empty_n),
    .if_read(imag2_0_data_stream_2_read)
);

fifo_w8_d640_A imag3_0_data_stream_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(imag3_0_data_stream_s_din),
    .if_full_n(imag3_0_data_stream_s_full_n),
    .if_write(imag3_0_data_stream_s_write),
    .if_dout(imag3_0_data_stream_s_dout),
    .if_empty_n(imag3_0_data_stream_s_empty_n),
    .if_read(imag3_0_data_stream_s_read)
);

fifo_w8_d640_A imag3_0_data_stream_1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(imag3_0_data_stream_1_din),
    .if_full_n(imag3_0_data_stream_1_full_n),
    .if_write(imag3_0_data_stream_1_write),
    .if_dout(imag3_0_data_stream_1_dout),
    .if_empty_n(imag3_0_data_stream_1_empty_n),
    .if_read(imag3_0_data_stream_1_read)
);

fifo_w8_d640_A imag3_0_data_stream_2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(imag3_0_data_stream_2_din),
    .if_full_n(imag3_0_data_stream_2_full_n),
    .if_write(imag3_0_data_stream_2_write),
    .if_dout(imag3_0_data_stream_2_dout),
    .if_empty_n(imag3_0_data_stream_2_empty_n),
    .if_read(imag3_0_data_stream_2_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond1_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond1_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((exitcond1_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_350)) begin
        if ((1'b1 == ap_condition_182)) begin
            ap_phi_reg_pp0_iter2_tmp_22_reg_273 <= tmp_9_fu_478_p3;
        end else if (((or_cond_reg_570 == 1'd1) & (exitcond_reg_557 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_tmp_22_reg_273 <= imag0_0_data_stream_0_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_22_reg_273 <= ap_phi_reg_pp0_iter1_tmp_22_reg_273;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_350)) begin
        if ((1'b1 == ap_condition_182)) begin
            ap_phi_reg_pp0_iter2_tmp_23_reg_285 <= tmp_6_fu_469_p3;
        end else if (((or_cond_reg_570 == 1'd1) & (exitcond_reg_557 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_tmp_23_reg_285 <= imag0_0_data_stream_1_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_23_reg_285 <= ap_phi_reg_pp0_iter1_tmp_23_reg_285;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_350)) begin
        if ((1'b1 == ap_condition_182)) begin
            ap_phi_reg_pp0_iter2_tmp_24_reg_297 <= tmp_3_fu_460_p3;
        end else if (((or_cond_reg_570 == 1'd1) & (exitcond_reg_557 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_tmp_24_reg_297 <= imag0_0_data_stream_2_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_24_reg_297 <= ap_phi_reg_pp0_iter1_tmp_24_reg_297;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_327_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        t_V_1_reg_253 <= j_V_fu_333_p2;
    end else if (((exitcond1_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_1_reg_253 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        t_V_reg_242 <= i_V_reg_547;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_242 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_tmp_22_reg_273 <= ap_phi_reg_pp0_iter0_tmp_22_reg_273;
        ap_phi_reg_pp0_iter1_tmp_23_reg_285 <= ap_phi_reg_pp0_iter0_tmp_23_reg_285;
        ap_phi_reg_pp0_iter1_tmp_24_reg_297 <= ap_phi_reg_pp0_iter0_tmp_24_reg_297;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_tmp_22_reg_273 <= ap_phi_reg_pp0_iter2_tmp_22_reg_273;
        ap_phi_reg_pp0_iter3_tmp_23_reg_285 <= ap_phi_reg_pp0_iter2_tmp_23_reg_285;
        ap_phi_reg_pp0_iter3_tmp_24_reg_297 <= ap_phi_reg_pp0_iter2_tmp_24_reg_297;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_exitcond_reg_557 <= exitcond_reg_557;
        ap_reg_pp0_iter1_or_cond_reg_570 <= or_cond_reg_570;
        ap_reg_pp0_iter1_tmp_7_reg_566 <= tmp_7_reg_566;
        exitcond_reg_557 <= exitcond_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond_reg_557 <= ap_reg_pp0_iter1_exitcond_reg_557;
        ap_reg_pp0_iter2_or_cond_reg_570 <= ap_reg_pp0_iter1_or_cond_reg_570;
        ap_reg_pp0_iter2_tmp_7_reg_566 <= ap_reg_pp0_iter1_tmp_7_reg_566;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_547 <= i_V_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_fu_339_p2 == 1'd1) & (or_cond_fu_345_p2 == 1'd0) & (exitcond_fu_327_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        not_tmp_s_reg_586 <= not_tmp_s_fu_362_p2;
        tmp_8_reg_580 <= tmp_8_fu_356_p2;
        tmp_s_reg_574 <= tmp_s_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_327_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_cond_reg_570 <= or_cond_fu_345_p2;
        tmp_7_reg_566 <= tmp_7_fu_339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_or_cond_reg_570 == 1'd0) & (ap_reg_pp0_iter1_tmp_7_reg_566 == 1'd0) & (ap_reg_pp0_iter1_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        s_val_0_reg_632 <= {{mul_fu_500_p2[19:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op68_read_state4 == 1'b1))) begin
        tmp_13_reg_597 <= tmp_13_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_read_state4 == 1'b1))) begin
        tmp_20_reg_592 <= tmp_20_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_309_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_5_reg_552 <= tmp_5_fu_321_p2;
    end
end

always @ (*) begin
    if ((exitcond_fu_327_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_598)) begin
        if ((tmp_5_reg_552 == 1'd1)) begin
            ap_phi_mux_storemerge256_in_in_phi_fu_267_p4 = tmp_13_reg_597;
        end else if ((tmp_5_reg_552 == 1'd0)) begin
            ap_phi_mux_storemerge256_in_in_phi_fu_267_p4 = tmp_20_reg_592;
        end else begin
            ap_phi_mux_storemerge256_in_in_phi_fu_267_p4 = ap_phi_reg_pp0_iter2_storemerge256_in_in_reg_264;
        end
    end else begin
        ap_phi_mux_storemerge256_in_in_phi_fu_267_p4 = ap_phi_reg_pp0_iter2_storemerge256_in_in_reg_264;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_or_cond_reg_570 == 1'd0) & (ap_reg_pp0_iter2_tmp_7_reg_566 == 1'd0) & (ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_tmp_22_phi_fu_276_p6 = s_val_0_reg_632;
    end else begin
        ap_phi_mux_tmp_22_phi_fu_276_p6 = ap_phi_reg_pp0_iter3_tmp_22_reg_273;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_or_cond_reg_570 == 1'd0) & (ap_reg_pp0_iter2_tmp_7_reg_566 == 1'd0) & (ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_tmp_23_phi_fu_288_p6 = s_val_0_reg_632;
    end else begin
        ap_phi_mux_tmp_23_phi_fu_288_p6 = ap_phi_reg_pp0_iter3_tmp_23_reg_285;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_or_cond_reg_570 == 1'd0) & (ap_reg_pp0_iter2_tmp_7_reg_566 == 1'd0) & (ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_tmp_24_phi_fu_300_p6 = s_val_0_reg_632;
    end else begin
        ap_phi_mux_tmp_24_phi_fu_300_p6 = ap_phi_reg_pp0_iter3_tmp_24_reg_297;
    end
end

always @ (*) begin
    if (((or_cond_reg_570 == 1'd1) & (exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imag0_0_data_stream_0_V_blk_n = imag0_0_data_stream_0_V_empty_n;
    end else begin
        imag0_0_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state4 == 1'b1))) begin
        imag0_0_data_stream_0_V_read = 1'b1;
    end else begin
        imag0_0_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_reg_570 == 1'd1) & (exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imag0_0_data_stream_1_V_blk_n = imag0_0_data_stream_1_V_empty_n;
    end else begin
        imag0_0_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state4 == 1'b1))) begin
        imag0_0_data_stream_1_V_read = 1'b1;
    end else begin
        imag0_0_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_reg_570 == 1'd1) & (exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imag0_0_data_stream_2_V_blk_n = imag0_0_data_stream_2_V_empty_n;
    end else begin
        imag0_0_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state4 == 1'b1))) begin
        imag0_0_data_stream_2_V_read = 1'b1;
    end else begin
        imag0_0_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op68_read_state4 == 1'b1))) begin
        imag2_0_data_stream_1_read = 1'b1;
    end else begin
        imag2_0_data_stream_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state4 == 1'b1))) begin
        imag2_0_data_stream_1_write = 1'b1;
    end else begin
        imag2_0_data_stream_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op68_read_state4 == 1'b1))) begin
        imag2_0_data_stream_2_read = 1'b1;
    end else begin
        imag2_0_data_stream_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state4 == 1'b1))) begin
        imag2_0_data_stream_2_write = 1'b1;
    end else begin
        imag2_0_data_stream_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op68_read_state4 == 1'b1))) begin
        imag2_0_data_stream_s_read = 1'b1;
    end else begin
        imag2_0_data_stream_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op97_read_state4 == 1'b1))) begin
        imag2_0_data_stream_s_write = 1'b1;
    end else begin
        imag2_0_data_stream_s_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_read_state4 == 1'b1))) begin
        imag3_0_data_stream_1_read = 1'b1;
    end else begin
        imag3_0_data_stream_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op90_write_state4 == 1'b1))) begin
        imag3_0_data_stream_1_write = 1'b1;
    end else begin
        imag3_0_data_stream_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_read_state4 == 1'b1))) begin
        imag3_0_data_stream_2_read = 1'b1;
    end else begin
        imag3_0_data_stream_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op90_write_state4 == 1'b1))) begin
        imag3_0_data_stream_2_write = 1'b1;
    end else begin
        imag3_0_data_stream_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op58_read_state4 == 1'b1))) begin
        imag3_0_data_stream_s_read = 1'b1;
    end else begin
        imag3_0_data_stream_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op90_write_state4 == 1'b1))) begin
        imag3_0_data_stream_s_write = 1'b1;
    end else begin
        imag3_0_data_stream_s_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imag_1_data_stream_0_V_blk_n = imag_1_data_stream_0_V_full_n;
    end else begin
        imag_1_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imag_1_data_stream_0_V_write = 1'b1;
    end else begin
        imag_1_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imag_1_data_stream_1_V_blk_n = imag_1_data_stream_1_V_full_n;
    end else begin
        imag_1_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imag_1_data_stream_1_V_write = 1'b1;
    end else begin
        imag_1_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imag_1_data_stream_2_V_blk_n = imag_1_data_stream_2_V_full_n;
    end else begin
        imag_1_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imag_1_data_stream_2_V_write = 1'b1;
    end else begin
        imag_1_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((exitcond_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((imag2_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag2_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((imag2_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag2_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((imag2_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag2_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((imag2_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag0_0_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op97_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_1_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag3_0_data_stream_s_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((imag2_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag2_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op68_read_state4 == 1'b1)) | ((imag3_0_data_stream_2_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_1_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)) | ((imag3_0_data_stream_s_empty_n == 1'b0) & (ap_predicate_op58_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter3 = (((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter2_exitcond_reg_557 == 1'd0) & (imag_1_data_stream_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_182 = ((tmp_7_reg_566 == 1'd1) & (or_cond_reg_570 == 1'd0) & (exitcond_reg_557 == 1'd0));
end

always @ (*) begin
    ap_condition_350 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_598 = ((ap_reg_pp0_iter1_or_cond_reg_570 == 1'd0) & (ap_reg_pp0_iter1_tmp_7_reg_566 == 1'd0) & (ap_reg_pp0_iter1_exitcond_reg_557 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_22_reg_273 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_23_reg_285 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_24_reg_297 = 'bx;

assign ap_phi_reg_pp0_iter2_storemerge256_in_in_reg_264 = 'bx;

always @ (*) begin
    ap_predicate_op58_read_state4 = ((or_cond_reg_570 == 1'd0) & (tmp_7_reg_566 == 1'd0) & (tmp_5_reg_552 == 1'd0) & (exitcond_reg_557 == 1'd0));
end

always @ (*) begin
    ap_predicate_op68_read_state4 = ((tmp_5_reg_552 == 1'd1) & (or_cond_reg_570 == 1'd0) & (tmp_7_reg_566 == 1'd0) & (exitcond_reg_557 == 1'd0));
end

always @ (*) begin
    ap_predicate_op90_write_state4 = ((tmp_7_reg_566 == 1'd1) & (or_cond_reg_570 == 1'd0) & (exitcond_reg_557 == 1'd0));
end

always @ (*) begin
    ap_predicate_op97_read_state4 = ((or_cond_reg_570 == 1'd1) & (exitcond_reg_557 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign exitcond1_fu_309_p2 = ((t_V_reg_242 == 10'd960) ? 1'b1 : 1'b0);

assign exitcond_fu_327_p2 = ((t_V_1_reg_253 == 11'd1280) ? 1'b1 : 1'b0);

assign i_V_fu_315_p2 = (t_V_reg_242 + 10'd1);

assign imag3_0_data_stream_1_din = ((s_val_1_fu_448_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign imag3_0_data_stream_2_din = ((s_val_2_fu_454_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign imag3_0_data_stream_s_din = ((s_val_0_3_fu_438_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign imag_1_data_stream_0_V_din = ap_phi_mux_tmp_22_phi_fu_276_p6;

assign imag_1_data_stream_1_V_din = ap_phi_mux_tmp_23_phi_fu_288_p6;

assign imag_1_data_stream_2_V_din = ap_phi_mux_tmp_24_phi_fu_300_p6;

assign j_V_fu_333_p2 = (t_V_1_reg_253 + 11'd1);

assign mul_fu_500_p0 = mul_fu_500_p00;

assign mul_fu_500_p00 = ap_phi_mux_storemerge256_in_in_phi_fu_267_p4;

assign mul_fu_500_p1 = 22'd1366;

assign not_tmp_1_fu_424_p2 = (tmp_8_reg_580 ^ 1'd1);

assign not_tmp_2_fu_443_p2 = (tmp_s_reg_574 ^ 1'd1);

assign not_tmp_s_fu_362_p2 = ((t_V_1_reg_253 > 11'd479) ? 1'b1 : 1'b0);

assign or_cond_fu_345_p2 = (tmp_7_fu_339_p2 & tmp_5_reg_552);

assign p_not_tmp_1_fu_434_p2 = (tmp_8_reg_580 | not_tmp_s_reg_586);

assign p_not_tmp_s_fu_429_p2 = (not_tmp_s_reg_586 & not_tmp_1_fu_424_p2);

assign s_val_0_3_fu_438_p2 = (tmp_s_reg_574 | p_not_tmp_s_fu_429_p2);

assign s_val_1_fu_448_p2 = (p_not_tmp_1_fu_434_p2 & not_tmp_2_fu_443_p2);

assign s_val_2_fu_454_p2 = (not_tmp_2_fu_443_p2 & not_tmp_1_fu_424_p2);

assign start_out = real_start;

assign tmp_12_fu_404_p2 = (tmp_16_cast_fu_400_p1 + tmp_15_cast_fu_396_p1);

assign tmp_13_fu_418_p2 = (tmp_18_cast_fu_410_p1 + tmp_17_cast_fu_414_p1);

assign tmp_15_cast_fu_396_p1 = imag2_0_data_stream_s_dout;

assign tmp_16_cast_fu_400_p1 = imag2_0_data_stream_1_dout;

assign tmp_17_cast_fu_414_p1 = imag2_0_data_stream_2_dout;

assign tmp_18_cast_fu_410_p1 = tmp_12_fu_404_p2;

assign tmp_18_fu_376_p2 = (tmp_23_cast_fu_372_p1 + tmp_22_cast_fu_368_p1);

assign tmp_20_fu_390_p2 = (tmp_25_cast_fu_382_p1 + tmp_24_cast_fu_386_p1);

assign tmp_22_cast_fu_368_p1 = imag3_0_data_stream_s_dout;

assign tmp_23_cast_fu_372_p1 = imag3_0_data_stream_1_dout;

assign tmp_24_cast_fu_386_p1 = imag3_0_data_stream_2_dout;

assign tmp_25_cast_fu_382_p1 = tmp_18_fu_376_p2;

assign tmp_3_fu_460_p3 = ((s_val_2_fu_454_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign tmp_5_fu_321_p2 = ((t_V_reg_242 < 10'd480) ? 1'b1 : 1'b0);

assign tmp_6_fu_469_p3 = ((s_val_1_fu_448_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign tmp_7_fu_339_p2 = ((t_V_1_reg_253 < 11'd640) ? 1'b1 : 1'b0);

assign tmp_8_fu_356_p2 = ((t_V_1_reg_253 < 11'd320) ? 1'b1 : 1'b0);

assign tmp_9_fu_478_p3 = ((s_val_0_3_fu_438_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign tmp_s_fu_350_p2 = ((t_V_1_reg_253 < 11'd160) ? 1'b1 : 1'b0);

endmodule //Loop_loop_height_pro
